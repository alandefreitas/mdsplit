{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"mdsplit Generate your documentation from bulky README.md files Github is full of mid-sized projects that help us solve specific tasks. Authors tend to document these repositories with beautiful README.md files and some auxiliary documents. mdsplit is a tool that splits these bulky README.md files into smaller files in a way compatible with GitHub Pages + GitHub Actions + MkDocs. GitHub Actions will then regenerate the documentation whenever your README.md file is updated.","title":"Home"},{"location":"#mdsplit","text":"Generate your documentation from bulky README.md files Github is full of mid-sized projects that help us solve specific tasks. Authors tend to document these repositories with beautiful README.md files and some auxiliary documents. mdsplit is a tool that splits these bulky README.md files into smaller files in a way compatible with GitHub Pages + GitHub Actions + MkDocs. GitHub Actions will then regenerate the documentation whenever your README.md file is updated.","title":"mdsplit"},{"location":"gallery/","text":"Gallery These are some projects that use mdsplit . Use the links below to compare their documentation with the README.md files. Repository Documentation README.md Matplot++ URL URL Pareto URL URL BibExplorer URL URL mdsplit itself URL URL !!! note Let me know if you want to list your project here.","title":"Gallery"},{"location":"gallery/#gallery","text":"These are some projects that use mdsplit . Use the links below to compare their documentation with the README.md files. Repository Documentation README.md Matplot++ URL URL Pareto URL URL BibExplorer URL URL mdsplit itself URL URL !!! note Let me know if you want to list your project here.","title":"Gallery"},{"location":"quick-start/","text":"Quick Start Go to your repository settings and turn on GitHub Pages on the branch gh-pages. Copy the mkdocs.yml file to your repository: See contents mkdocs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 site_name : mdsplit site_url : https://alandefreitas.github.io/mdsplit/ repo_url : https://github.com/alandefreitas/mdsplit repo_name : alandefreitas/mdsplit site_description : Generate documentation from bulky README.md files theme : name : material palette : scheme : preference features : - navigation.instant - navigation.sections - toc.integrate - header.autohide icon : repo : fontawesome/brands/git-alt edit_uri : \"\" plugins : - search - awesome-pages # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin google_analytics : - G-3H1KP9L0TN - auto copyright : Copyright &copy; 2020 Alan Freitas markdown_extensions : - admonition - pymdownx.details - pymdownx.highlight : use_pygments : true linenums : true linenums_style : pymdownx.inline - pymdownx.inlinehilite - pymdownx.superfences - pymdownx.tabbed - pymdownx.snippets - pymdownx.arithmatex : generic : true - meta extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js Copy the .github/workflows/docs.yml file to your repository: See contents docs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 name : Docs Generator on : push : paths : - 'README.md' - '.github/workflows/docs.yml' jobs : generateDOC : name : Docs Generator runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 # Use this action workflow to update your README.md with the table of contents - uses : technote-space/toc-generator@v2 with : GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} MAX_HEADER_LEVEL : 3 FOLDING : true # Use this step to use the latest version of mdsplit # Comment this step if you want the latest release - name : Download and build mdsplit from source run : | mkdir build cd build cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc-8 -DCMAKE_CXX_COMPILER=/usr/bin/g++-8 -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_BUILD_TYPE=Release cmake --build . -j 2 --config Release sudo cmake --install . cd .. # Uncomment these steps to use the latest release of mdsplit # - name: Download mdsplit # uses: carlosperate/download-file-action@v1.0.3 # id: download-mdsplit # with: # file-url: 'https://github.com/alandefreitas/mdsplit/releases/download/v0.1.0/Executable.Linux.zip' # file-name: 'mdsplit.zip' # location: '.' # - name: Unzip mdsplit # run: | # unzip mdsplit.zip # rm -f mdsplit.zip # sudo chmod +x mdsplit # ls # Run mdsplit to generate docs - name : Generate Docs run : | mdsplit -r alandefreitas/mdsplit # Set up Python - name : Set up Python uses : actions/setup-python@v2 with : python-version : 3.x - name : Install mkdocs run : pip install mkdocs-material # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin - name : Install Navigation Plugin run : pip install mkdocs-awesome-pages-plugin # Deploy the mkdocs to the gh-pages branch - name : Deploy mkdocs run : mkdocs gh-deploy --force In a few seconds, your README.md file will become a beautiful documentation.","title":"Quick Start"},{"location":"quick-start/#quick-start","text":"Go to your repository settings and turn on GitHub Pages on the branch gh-pages. Copy the mkdocs.yml file to your repository: See contents mkdocs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 site_name : mdsplit site_url : https://alandefreitas.github.io/mdsplit/ repo_url : https://github.com/alandefreitas/mdsplit repo_name : alandefreitas/mdsplit site_description : Generate documentation from bulky README.md files theme : name : material palette : scheme : preference features : - navigation.instant - navigation.sections - toc.integrate - header.autohide icon : repo : fontawesome/brands/git-alt edit_uri : \"\" plugins : - search - awesome-pages # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin google_analytics : - G-3H1KP9L0TN - auto copyright : Copyright &copy; 2020 Alan Freitas markdown_extensions : - admonition - pymdownx.details - pymdownx.highlight : use_pygments : true linenums : true linenums_style : pymdownx.inline - pymdownx.inlinehilite - pymdownx.superfences - pymdownx.tabbed - pymdownx.snippets - pymdownx.arithmatex : generic : true - meta extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js Copy the .github/workflows/docs.yml file to your repository: See contents docs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 name : Docs Generator on : push : paths : - 'README.md' - '.github/workflows/docs.yml' jobs : generateDOC : name : Docs Generator runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 # Use this action workflow to update your README.md with the table of contents - uses : technote-space/toc-generator@v2 with : GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} MAX_HEADER_LEVEL : 3 FOLDING : true # Use this step to use the latest version of mdsplit # Comment this step if you want the latest release - name : Download and build mdsplit from source run : | mkdir build cd build cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc-8 -DCMAKE_CXX_COMPILER=/usr/bin/g++-8 -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_BUILD_TYPE=Release cmake --build . -j 2 --config Release sudo cmake --install . cd .. # Uncomment these steps to use the latest release of mdsplit # - name: Download mdsplit # uses: carlosperate/download-file-action@v1.0.3 # id: download-mdsplit # with: # file-url: 'https://github.com/alandefreitas/mdsplit/releases/download/v0.1.0/Executable.Linux.zip' # file-name: 'mdsplit.zip' # location: '.' # - name: Unzip mdsplit # run: | # unzip mdsplit.zip # rm -f mdsplit.zip # sudo chmod +x mdsplit # ls # Run mdsplit to generate docs - name : Generate Docs run : | mdsplit -r alandefreitas/mdsplit # Set up Python - name : Set up Python uses : actions/setup-python@v2 with : python-version : 3.x - name : Install mkdocs run : pip install mkdocs-material # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin - name : Install Navigation Plugin run : pip install mkdocs-awesome-pages-plugin # Deploy the mkdocs to the gh-pages branch - name : Deploy mkdocs run : mkdocs gh-deploy --force In a few seconds, your README.md file will become a beautiful documentation.","title":"Quick Start"},{"location":"contributing/contributors/","text":"Contributors Alan De Freitas Actions-user","title":"Contributors"},{"location":"contributing/contributors/#contributors","text":"Alan De Freitas Actions-user","title":"Contributors"},{"location":"contributing/guidelines/","text":"Guidelines If contributing with code, please leave the pedantic mode ON ( -DBUILD_WITH_PEDANTIC_WARNINGS=ON ), use cppcheck , and clang-format . Example: CLion","title":"Guidelines"},{"location":"contributing/guidelines/#guidelines","text":"If contributing with code, please leave the pedantic mode ON ( -DBUILD_WITH_PEDANTIC_WARNINGS=ON ), use cppcheck , and clang-format . Example: CLion","title":"Guidelines"},{"location":"installing/binaries/","text":"Binaries Get the latest release from the Release Page or download the latest binaries from the CI Artifacts .","title":"Binaries"},{"location":"installing/binaries/#binaries","text":"Get the latest release from the Release Page or download the latest binaries from the CI Artifacts .","title":"Binaries"},{"location":"installing/install-from-source/","text":"Install from Source To install from the source files: Windows 1 2 3 4 mkdir build cmake .. -DCMAKE_BUILD_TYPE = Release -DCMAKE_CXX_FLAGS = \"/O2\" cmake --build . -j 2 --config Release cmake --install . Linux 1 2 3 4 mkdir build cmake .. -DCMAKE_BUILD_TYPE = Release -DCMAKE_CXX_FLAGS = \"-O2\" cmake --build . -j 2 --config Release sudo cmake --install . Mac OS 1 2 3 4 mkdir build cmake .. -DCMAKE_BUILD_TYPE = Release -DCMAKE_CXX_FLAGS = \"-O2\" cmake --build . -j 2 --config Release cmake --install . The dependencies are CMake 3.17 and C++17.","title":"Install from Source"},{"location":"installing/install-from-source/#install-from-source","text":"To install from the source files: Windows 1 2 3 4 mkdir build cmake .. -DCMAKE_BUILD_TYPE = Release -DCMAKE_CXX_FLAGS = \"/O2\" cmake --build . -j 2 --config Release cmake --install . Linux 1 2 3 4 mkdir build cmake .. -DCMAKE_BUILD_TYPE = Release -DCMAKE_CXX_FLAGS = \"-O2\" cmake --build . -j 2 --config Release sudo cmake --install . Mac OS 1 2 3 4 mkdir build cmake .. -DCMAKE_BUILD_TYPE = Release -DCMAKE_CXX_FLAGS = \"-O2\" cmake --build . -j 2 --config Release cmake --install . The dependencies are CMake 3.17 and C++17.","title":"Install from Source"},{"location":"options/","text":"Options Run mdsplit with the --help (or -h ) option to see all the command-line options: 1 mdsplit -h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 Generate documentation from README.md files Usage: mdsplit -i input_directory -o output_directory -r username/repository File options: -i, --input arg Input file (default: README.md) -o, --output arg Output directory (default: docs) -r, --repository arg Output repository Behaviour options: -l, --level arg Max level for which we should split the file (default: 6) -c, --clear-html arg List of HTML tags mdsplit should clear (default: details,summary) -t, --toc Create a table of contents for the new files (default: true) -j, --jekyll-escape Escape consecutive \"{ {\"s for Jekyll processing (default: true) --header-reindent Reindent headers to match the new files (default: true) -f, --front-matter Include a front-matter in the new files (default: true) -u, --url-update Update relative URLs to their new relative paths (default: true) --remove-auto-toc Remove automatic table of contents (default: true) --trace Trace commands (default: true) Help options: -h, --help Print usage -v, --version Print version","title":"Introduction"},{"location":"options/#options","text":"Run mdsplit with the --help (or -h ) option to see all the command-line options: 1 mdsplit -h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 Generate documentation from README.md files Usage: mdsplit -i input_directory -o output_directory -r username/repository File options: -i, --input arg Input file (default: README.md) -o, --output arg Output directory (default: docs) -r, --repository arg Output repository Behaviour options: -l, --level arg Max level for which we should split the file (default: 6) -c, --clear-html arg List of HTML tags mdsplit should clear (default: details,summary) -t, --toc Create a table of contents for the new files (default: true) -j, --jekyll-escape Escape consecutive \"{ {\"s for Jekyll processing (default: true) --header-reindent Reindent headers to match the new files (default: true) -f, --front-matter Include a front-matter in the new files (default: true) -u, --url-update Update relative URLs to their new relative paths (default: true) --remove-auto-toc Remove automatic table of contents (default: true) --trace Trace commands (default: true) Help options: -h, --help Print usage -v, --version Print version","title":"Options"},{"location":"options/front-matter/","text":"Front matter The --front-matter (or -f ) option tells mdsplit to generate a front matter for each new file. The default option is true so you need --front-matter=false to turn it off. This front matter includes parameters such as title , nav_order , parent , has_children , and nav_exclude for each markdown file. Jekyll themes can use these parameters to generate proper navigation bars, order pages, and define page titles.","title":"Front matter"},{"location":"options/front-matter/#front-matter","text":"The --front-matter (or -f ) option tells mdsplit to generate a front matter for each new file. The default option is true so you need --front-matter=false to turn it off. This front matter includes parameters such as title , nav_order , parent , has_children , and nav_exclude for each markdown file. Jekyll themes can use these parameters to generate proper navigation bars, order pages, and define page titles.","title":"Front matter"},{"location":"options/hiding-sections/","text":"Hiding sections Use the comments <!-- START mdsplit-ignore --> and <!-- END mdsplit-ignore --> to ignore sections from your README.md . For instance: Markdown 1 2 3 4 5 6 <!-- START mdsplit-ignore --> # Section to ignore `mdsplit` will remove this whole section from your documentation. <!-- END mdsplit-ignore --> or Markdown 1 2 3 4 5 # Section to ignore <!-- START mdsplit-ignore --> `mdsplit` will remove this paragraph from your documentation. <!-- END mdsplit-ignore --> If you ignore the complete section, mdsplit will create no file for that section. If you're reading this from README.md you will see this section has a subsection that will be completely ignored in the documentation.","title":"Hiding sections"},{"location":"options/hiding-sections/#hiding-sections","text":"Use the comments <!-- START mdsplit-ignore --> and <!-- END mdsplit-ignore --> to ignore sections from your README.md . For instance: Markdown 1 2 3 4 5 6 <!-- START mdsplit-ignore --> # Section to ignore `mdsplit` will remove this whole section from your documentation. <!-- END mdsplit-ignore --> or Markdown 1 2 3 4 5 # Section to ignore <!-- START mdsplit-ignore --> `mdsplit` will remove this paragraph from your documentation. <!-- END mdsplit-ignore --> If you ignore the complete section, mdsplit will create no file for that section. If you're reading this from README.md you will see this section has a subsection that will be completely ignored in the documentation.","title":"Hiding sections"},{"location":"options/input-file/","text":"Input file The --input (or -i ) option defines the file mdsplit should split to generate the documentation. You don't usually want to change the default from README.md because that's the file GitHub uses for all repositories. However, it might be useful to use another file as input if you want to have your documentation in a bulky markdown file kept separate from your main README.md .","title":"Input file"},{"location":"options/input-file/#input-file","text":"The --input (or -i ) option defines the file mdsplit should split to generate the documentation. You don't usually want to change the default from README.md because that's the file GitHub uses for all repositories. However, it might be useful to use another file as input if you want to have your documentation in a bulky markdown file kept separate from your main README.md .","title":"Input file"},{"location":"options/links-to-repository/","text":"Links to Repository The --repository (or -r ) option should be used to provide your repository name to mdsplit . This option enables mdsplit to create links to files inside the repository. Although all internal repository links work in GitHub, not all internal links are adjusted to work with GitHub Pages. Documentation files can only contain links to other markdown files in the documentation directory. If your documentation needs to refer to a file in the repository and this file is not under .docs/ , links need to use the absolute repository link as a parent path. For instance, consider a file source/main.cpp outside docs . Then 1 [ My Internal Link ]( source/main.cpp ) should become 1 [ My Internal Link ]( https://github.com/my_username/my_repository/blob/master/source/main.cpp ) so that the link works correctly on GitHub pages. You can use the --repository (or -r ) option to provide the repository mdsplit should consider to generate these links: 1 mdsplit -r alandefreitas/matplotplusplus","title":"Links to Repository"},{"location":"options/links-to-repository/#links-to-repository","text":"The --repository (or -r ) option should be used to provide your repository name to mdsplit . This option enables mdsplit to create links to files inside the repository. Although all internal repository links work in GitHub, not all internal links are adjusted to work with GitHub Pages. Documentation files can only contain links to other markdown files in the documentation directory. If your documentation needs to refer to a file in the repository and this file is not under .docs/ , links need to use the absolute repository link as a parent path. For instance, consider a file source/main.cpp outside docs . Then 1 [ My Internal Link ]( source/main.cpp ) should become 1 [ My Internal Link ]( https://github.com/my_username/my_repository/blob/master/source/main.cpp ) so that the link works correctly on GitHub pages. You can use the --repository (or -r ) option to provide the repository mdsplit should consider to generate these links: 1 mdsplit -r alandefreitas/matplotplusplus","title":"Links to Repository"},{"location":"options/output-directory/","text":"Output directory The --output (or -o ) option defines the directory where mdsplit should store the documentation. You don't usually want to change the default from docs because GitHub Pages gives you only two options for the documentation directory: And cluttering the root directory with lots of markdown files and directories is not a good idea unless you are going to create another branch for your documentation.","title":"Output directory"},{"location":"options/output-directory/#output-directory","text":"The --output (or -o ) option defines the directory where mdsplit should store the documentation. You don't usually want to change the default from docs because GitHub Pages gives you only two options for the documentation directory: And cluttering the root directory with lots of markdown files and directories is not a good idea unless you are going to create another branch for your documentation.","title":"Output directory"},{"location":"options/remove-html-tags/","text":"Remove HTML Tags The --clear-html (or -d ) option defines the HTML tags mdsplit should remove from your README.md . This is useful to README.md files that use tags such as details and summary to emulate what the documentation would look like inside the README.md file. By default, mdsplit will remove the tags details and summary because 1) Jekyll themes often have difficulty with these tags and 2) people often use these tags in markdown files to emulate what the documentation would look like.","title":"Remove HTML Tags"},{"location":"options/remove-html-tags/#remove-html-tags","text":"The --clear-html (or -d ) option defines the HTML tags mdsplit should remove from your README.md . This is useful to README.md files that use tags such as details and summary to emulate what the documentation would look like inside the README.md file. By default, mdsplit will remove the tags details and summary because 1) Jekyll themes often have difficulty with these tags and 2) people often use these tags in markdown files to emulate what the documentation would look like.","title":"Remove HTML Tags"},{"location":"options/removing-old-sections/","text":"Removing old sections In principle, mdsplit will not remove any files in your documentation directory. It will only create or update files. This is meant to allow auxiliary files that you also want to be part of the documentation. However, that also means that if you change your section names in README.md , mdsplit will create a new file for this section and the old file would be left untouched. Your GitHub pages would then show you the new and old sections. If this is not an auxiliary file you want in your documentation, you need to remove these files. To make it easier to identify external auxiliary files, after saving the new markdown files, mdsplit will look for any .md files in the docs directory. If there are any files not generated by mdsplit , it will emit a message like the following: Output 1 2 3 4 # The following .md files were not generated by mdsplit # Please make sure that is on purpose: Outsider doc file: docs/README.md Outsider doc file: docs/COMPLETE_GALLERY.md If any of these files contain a comment indicating that mdsplit generated the file, then mdsplit might automatically remove the file. You can control this behaviour with the --erase-old-mdsplit-files (or -e ) option. The default value is true so you need --erase-old-mdsplit-files=false to turn it off.","title":"Removing old sections"},{"location":"options/removing-old-sections/#removing-old-sections","text":"In principle, mdsplit will not remove any files in your documentation directory. It will only create or update files. This is meant to allow auxiliary files that you also want to be part of the documentation. However, that also means that if you change your section names in README.md , mdsplit will create a new file for this section and the old file would be left untouched. Your GitHub pages would then show you the new and old sections. If this is not an auxiliary file you want in your documentation, you need to remove these files. To make it easier to identify external auxiliary files, after saving the new markdown files, mdsplit will look for any .md files in the docs directory. If there are any files not generated by mdsplit , it will emit a message like the following: Output 1 2 3 4 # The following .md files were not generated by mdsplit # Please make sure that is on purpose: Outsider doc file: docs/README.md Outsider doc file: docs/COMPLETE_GALLERY.md If any of these files contain a comment indicating that mdsplit generated the file, then mdsplit might automatically remove the file. You can control this behaviour with the --erase-old-mdsplit-files (or -e ) option. The default value is true so you need --erase-old-mdsplit-files=false to turn it off.","title":"Removing old sections"},{"location":"step-by-step/github-actions/","text":"Github Actions You can integrate mdsplit with GitHub actions to regenerate the documentation whenever you change your README.md file. Use this workflow to get started: .github/workflows/docs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 name : Docs Generator on : push : paths : - 'README.md' - '.github/workflows/docs.yml' jobs : generateDOC : name : Docs Generator runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 # Use this action workflow to update your README.md with the table of contents - uses : technote-space/toc-generator@v2 with : GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} MAX_HEADER_LEVEL : 3 FOLDING : true # Use this step to use the latest version of mdsplit # Comment this step if you want the latest release - name : Download and build mdsplit from source run : | mkdir build cd build cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc-8 -DCMAKE_CXX_COMPILER=/usr/bin/g++-8 -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_BUILD_TYPE=Release cmake --build . -j 2 --config Release sudo cmake --install . cd .. # Uncomment these steps to use the latest release of mdsplit # - name: Download mdsplit # uses: carlosperate/download-file-action@v1.0.3 # id: download-mdsplit # with: # file-url: 'https://github.com/alandefreitas/mdsplit/releases/download/v0.1.0/Executable.Linux.zip' # file-name: 'mdsplit.zip' # location: '.' # - name: Unzip mdsplit # run: | # unzip mdsplit.zip # rm -f mdsplit.zip # sudo chmod +x mdsplit # ls # Run mdsplit to generate docs - name : Generate Docs run : | mdsplit -r alandefreitas/mdsplit # Set up Python - name : Set up Python uses : actions/setup-python@v2 with : python-version : 3.x - name : Install mkdocs run : pip install mkdocs-material # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin - name : Install Navigation Plugin run : pip install mkdocs-awesome-pages-plugin # Deploy the mkdocs to the gh-pages branch - name : Deploy mkdocs run : mkdocs gh-deploy --force Replace the settings with your repository information. Most steps in this workflow are optional: The step technote-space/toc-generator@v2 creates a table of contents for your README.md file The second step downloads and builds the master version of mdsplit. This is the version we use in this repository, but you probably want to use a more stable version in your own repository. To do that, comment this step and use the third and forth steps instead. The third and fourth steps (commented out) download the latest release version of mdsplit. That's probably what you want for your repository. Uncomment these steps to do that. The next steps are pushing the docs to your master branch. Make any adjustments you might need. The last steps are taking the docs from your master branch and publishing them to your gh-pages branch.","title":"Github Actions"},{"location":"step-by-step/github-actions/#github-actions","text":"You can integrate mdsplit with GitHub actions to regenerate the documentation whenever you change your README.md file. Use this workflow to get started: .github/workflows/docs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 name : Docs Generator on : push : paths : - 'README.md' - '.github/workflows/docs.yml' jobs : generateDOC : name : Docs Generator runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 # Use this action workflow to update your README.md with the table of contents - uses : technote-space/toc-generator@v2 with : GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} MAX_HEADER_LEVEL : 3 FOLDING : true # Use this step to use the latest version of mdsplit # Comment this step if you want the latest release - name : Download and build mdsplit from source run : | mkdir build cd build cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc-8 -DCMAKE_CXX_COMPILER=/usr/bin/g++-8 -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_BUILD_TYPE=Release cmake --build . -j 2 --config Release sudo cmake --install . cd .. # Uncomment these steps to use the latest release of mdsplit # - name: Download mdsplit # uses: carlosperate/download-file-action@v1.0.3 # id: download-mdsplit # with: # file-url: 'https://github.com/alandefreitas/mdsplit/releases/download/v0.1.0/Executable.Linux.zip' # file-name: 'mdsplit.zip' # location: '.' # - name: Unzip mdsplit # run: | # unzip mdsplit.zip # rm -f mdsplit.zip # sudo chmod +x mdsplit # ls # Run mdsplit to generate docs - name : Generate Docs run : | mdsplit -r alandefreitas/mdsplit # Set up Python - name : Set up Python uses : actions/setup-python@v2 with : python-version : 3.x - name : Install mkdocs run : pip install mkdocs-material # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin - name : Install Navigation Plugin run : pip install mkdocs-awesome-pages-plugin # Deploy the mkdocs to the gh-pages branch - name : Deploy mkdocs run : mkdocs gh-deploy --force Replace the settings with your repository information. Most steps in this workflow are optional: The step technote-space/toc-generator@v2 creates a table of contents for your README.md file The second step downloads and builds the master version of mdsplit. This is the version we use in this repository, but you probably want to use a more stable version in your own repository. To do that, comment this step and use the third and forth steps instead. The third and fourth steps (commented out) download the latest release version of mdsplit. That's probably what you want for your repository. Uncomment these steps to do that. The next steps are pushing the docs to your master branch. Make any adjustments you might need. The last steps are taking the docs from your master branch and publishing them to your gh-pages branch.","title":"Github Actions"},{"location":"step-by-step/splitting-locally/","text":"Splitting Locally After installing mdsplit , run 1 mdsplit -r username/repository from your project root directory to generate your documentation. mdsplit will split your README.md file into smaller files and save the results to the docs directory. !!! note This is directory from where mkdocs will later build your documentation.","title":"Splitting Locally"},{"location":"step-by-step/splitting-locally/#splitting-locally","text":"After installing mdsplit , run 1 mdsplit -r username/repository from your project root directory to generate your documentation. mdsplit will split your README.md file into smaller files and save the results to the docs directory. !!! note This is directory from where mkdocs will later build your documentation.","title":"Splitting Locally"},{"location":"step-by-step/testing-locally/","text":"Testing Locally You might want to test your documentation locally before pushing it to your repository. Install mkdocs with 1 pip install mkdocs-material After generating the docs with mdsplit, run the mkdocs server with 1 mkdocs serve Or build the static documentation with 1 mkdocs serve Use this mkdocs configuration file to get started: mkdocs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 site_name : mdsplit site_url : https://alandefreitas.github.io/mdsplit/ repo_url : https://github.com/alandefreitas/mdsplit repo_name : alandefreitas/mdsplit site_description : Generate documentation from bulky README.md files theme : name : material palette : scheme : preference features : - navigation.instant - navigation.sections - toc.integrate - header.autohide icon : repo : fontawesome/brands/git-alt edit_uri : \"\" plugins : - search - awesome-pages # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin google_analytics : - G-3H1KP9L0TN - auto copyright : Copyright &copy; 2020 Alan Freitas markdown_extensions : - admonition - pymdownx.details - pymdownx.highlight : use_pygments : true linenums : true linenums_style : pymdownx.inline - pymdownx.inlinehilite - pymdownx.superfences - pymdownx.tabbed - pymdownx.snippets - pymdownx.arithmatex : generic : true - meta extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js Replace the settings with your repository information.","title":"Testing Locally"},{"location":"step-by-step/testing-locally/#testing-locally","text":"You might want to test your documentation locally before pushing it to your repository. Install mkdocs with 1 pip install mkdocs-material After generating the docs with mdsplit, run the mkdocs server with 1 mkdocs serve Or build the static documentation with 1 mkdocs serve Use this mkdocs configuration file to get started: mkdocs.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 site_name : mdsplit site_url : https://alandefreitas.github.io/mdsplit/ repo_url : https://github.com/alandefreitas/mdsplit repo_name : alandefreitas/mdsplit site_description : Generate documentation from bulky README.md files theme : name : material palette : scheme : preference features : - navigation.instant - navigation.sections - toc.integrate - header.autohide icon : repo : fontawesome/brands/git-alt edit_uri : \"\" plugins : - search - awesome-pages # https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin google_analytics : - G-3H1KP9L0TN - auto copyright : Copyright &copy; 2020 Alan Freitas markdown_extensions : - admonition - pymdownx.details - pymdownx.highlight : use_pygments : true linenums : true linenums_style : pymdownx.inline - pymdownx.inlinehilite - pymdownx.superfences - pymdownx.tabbed - pymdownx.snippets - pymdownx.arithmatex : generic : true - meta extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js Replace the settings with your repository information.","title":"Testing Locally"}]}